{"version":3,"file":"static/js/203.e2f0a394.chunk.js","mappings":"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","sources":["components/modal/AreYouSureModal.tsx","components/modal/Modal.tsx","components/other/UserLoader.tsx","components/routes/ListModalRoute.tsx","pages/profile/components/users-list/UserSuggestion.tsx","pages/profile/hooks/useUserList.ts","pages/profile/components/users-list/UsersListModal.tsx","svgs/empty/Close.tsx"],"sourcesContent":["import React from 'react'\r\n\r\ntype AreYouSureModalProps = {\r\n    areYouSureEvent: () => void\r\n    profileImage: string\r\n    closeEvent: () => void\r\n    buttonText: string\r\n    questionText: string\r\n    additionalText?: string\r\n}\r\n\r\nconst AreYouSureModal: React.FC<AreYouSureModalProps> = React.memo(({ \r\n    areYouSureEvent, \r\n    profileImage, \r\n    closeEvent, \r\n    buttonText, \r\n    questionText, \r\n    additionalText \r\n}) => {\r\n    return (\r\n        <div className=\"h-full w-full flex flex-col items-center z-50\">\r\n            <div className={`w-full h-[100px] flex items-start justify-center ${additionalText ? \"mt-3 mb-2\" : \"mt-6 mb-4\"}`}>\r\n                <img\r\n                    src={profileImage.length ? profileImage : process.env.PUBLIC_URL + \"/images/default-avatar-image.jpg\"}\r\n                    className=\"rounded-full h-[100px] w-[100px] object-cover\"\r\n                />\r\n            </div>\r\n            <p className={`text-sm ${!additionalText && \"mb-6\"}`}>{questionText}?</p>\r\n            {\r\n                additionalText ?\r\n                    <p className=\"text-gray-400 text-sm w-3/4 text-center mb-3 mt-1\">{additionalText}</p> :\r\n                    null\r\n            }\r\n            <button\r\n                className=\"w-full h-12 border-t-2 flex items-center justify-center text-rose-600 font-bold text-sm\"\r\n                onClick={areYouSureEvent}\r\n            >\r\n                {buttonText}\r\n            </button>\r\n            <button\r\n                className=\"w-full h-12 border-t-2 flex items-center justify-center text-sm\"\r\n                onClick={closeEvent}\r\n            >\r\n                Cancel\r\n            </button>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default AreYouSureModal","import React, { useCallback, useEffect } from 'react'\r\nimport { motion } from 'framer-motion';\r\nimport Close from 'svgs/empty/Close';\r\n\r\ntype ModalProps = {\r\n    children: React.ReactNode;\r\n    closeEvent: () => void;\r\n    styles: string\r\n}\r\n\r\nconst Modal: React.FC<ModalProps> = React.memo(({ children, closeEvent, styles }) => {\r\n    useEffect(() => {\r\n        document.body.classList.add(\"overflow-hidden\");\r\n        return () => document.body.classList.remove(\"overflow-hidden\");\r\n    }, [])\r\n\r\n    const clickHandler = useCallback((event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n        event.stopPropagation()\r\n        closeEvent()\r\n    }, [])\r\n\r\n    const stopPropagation = useCallback((event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n        event.stopPropagation()\r\n    }, [])\r\n\r\n    return (\r\n        <div\r\n            className=\"w-screen h-screen bg-[rgba(0,0,0,0.6)] fixed top-0 left-0 flex items-center justify-center z-50\"\r\n            onClick={clickHandler}\r\n        >\r\n            <motion.div\r\n                className={`${styles.includes(\"w-\") ? \"\" : \"w-64 sm:w-96\"} absolute flex flex-col bg-white rounded-xl z-50 ${styles}`}\r\n                initial={{ scale: 1.2 }}\r\n                animate={{ scale: 1 }}\r\n                transition={{ duration: 0.12 }}\r\n                onClick={stopPropagation}\r\n            >\r\n                {children}\r\n            </motion.div>\r\n            <div className=\"absolute top-4 right-4 cursor-pointer\">\r\n                <Close styles=\"w-[25px] h-[25px] text-white\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Modal","import React from 'react';\r\nimport { RectShape } from 'react-placeholder/lib/placeholders';\r\n\r\ntype UserLoaderType = {\r\n    imageStyles: object, \r\n    firstTextStyles: object,\r\n    secondTextStyles: object,\r\n    margin?: string,\r\n}\r\n\r\nconst UserLoader: React.FC<UserLoaderType> = React.memo(({ imageStyles, firstTextStyles, secondTextStyles, margin }) => {\r\n    return (\r\n        <div className={`flex px-[2px] pr-6 items-center justify-center py-1 ${margin ? margin: \"\"}`}>\r\n            <div className=\"w-full py-[0.5px] flex items-center px-3\">\r\n                <RectShape color=\"#E5E7EB\" style={imageStyles} />\r\n                <div className=\"w-[calc(100%-70px)] mt-1 gap-2 h-5/6 flex flex-col justify-center\">\r\n                    <RectShape color=\"#E5E7EB\" style={firstTextStyles} />\r\n                    <RectShape color=\"#E5E7EB\" style={secondTextStyles} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default UserLoader","import Modal from 'components/modal/Modal'\r\nimport UsersListModal from 'pages/profile/components/users-list/UsersListModal'\r\nimport React, { useCallback } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\ntype ListModalRouteProps = {\r\n    usersList: {userId: string}[],\r\n    descriptionLine: string\r\n}\r\n\r\nconst ListModalRoute: React.FC<ListModalRouteProps> = ({ usersList, descriptionLine }) => {\r\n    const navigate = useNavigate();\r\n\r\n    const navigateBack = useCallback(() => {\r\n        navigate(-1)\r\n    }, [])\r\n\r\n    return (\r\n        <Modal\r\n            closeEvent={navigateBack}\r\n            styles=\"h-96 top-[20%]\"\r\n        >\r\n            <UsersListModal\r\n                descriptionLine={descriptionLine}\r\n                usersList={usersList}\r\n                closeEvent={navigateBack}\r\n            />\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default ListModalRoute","import React, { useCallback, useState } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport RoutesTypes from 'constants/routes-types';\r\nimport { useAppDispatch, useAppSelector } from 'redux-setup/hooks';\r\nimport UserSuggestionType from 'types/userSuggestionType';\r\nimport Modal from 'components/modal/Modal';\r\nimport AreYouSureModal from 'components/modal/AreYouSureModal';\r\nimport addToFollowing from \"redux-setup/features/signed-user/thunks/addToFollowing\";\r\nimport removeFromFollowing from \"redux-setup/features/signed-user/thunks/removeFromFollowing\";\r\n\r\nconst UserSuggestion: React.FC<UserSuggestionType> = React.memo(({ profileImage, username, fullName, userId }) => {\r\n    const loggedUser = useAppSelector(state => state.signedUser.user);\r\n    const dispatch = useAppDispatch();\r\n\r\n    const navigate = useNavigate();\r\n    const { uid } = useParams();\r\n\r\n    const [isUnfollowModalOpen, setIsUnfollowModalOpen] = useState<boolean>(false);\r\n\r\n    const handleFollowingClick = useCallback((event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n        event.stopPropagation();\r\n        setIsUnfollowModalOpen(true);\r\n    }, [])\r\n\r\n    const handleFollowClick = useCallback((event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n        event.stopPropagation();\r\n        dispatch(addToFollowing({ userId, uid: uid as string }));\r\n    }, [userId, uid])\r\n\r\n    const areYouSureEvent = useCallback(() => {\r\n        setIsUnfollowModalOpen(false)\r\n        dispatch(removeFromFollowing({ userId, uid: uid as string }))\r\n    }, [userId, uid])\r\n\r\n    const navigateToProfile = useCallback(() => {\r\n        navigate(RoutesTypes.DASHBOARD + userId)\r\n    }, [userId])\r\n\r\n    const closeUnfollowModal = useCallback(() => {\r\n        setIsUnfollowModalOpen(false)\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"flex w-full h-13 mb-1 px-2 justify-between items-center my-[4px]\">\r\n            <button \r\n                className=\"w-full h-full py-[0.5px] gap-2 flex items-center\"\r\n                onClick={navigateToProfile}\r\n            >\r\n                <img\r\n                    src={profileImage.length ? profileImage : process.env.PUBLIC_URL + \"/images/default-avatar-image.jpg\"}\r\n                    className=\"h-11 w-11 rounded-full object-cover\"\r\n                />\r\n                <div className=\"flex flex-col items-start\">\r\n                    <p className=\"font-medium text-sm tracking-wide whitespace-nowrap\">{username}</p>\r\n                    <p className=\"text-gray-400 text-sm whitespace-nowrap\">{fullName}</p>\r\n                </div>\r\n            </button>\r\n            {\r\n                userId === loggedUser.userId || !loggedUser.userId.length ?\r\n                    null :\r\n                    loggedUser.following.some(data => data.userId === userId) ?\r\n                        <button\r\n                            className=\"h-7 w-28 rounded border text-sm font-medium cursor-pointer\"\r\n                            onClick={handleFollowingClick}\r\n                        >\r\n                            Following\r\n                        </button> :\r\n                        <button\r\n                            className=\"h-7 w-20 bg-blue-500 font-medium text-white rounded cursor-pointer text-sm tracking-wide\"\r\n                            onClick={handleFollowClick}\r\n                        >\r\n                            Follow\r\n                        </button>\r\n            }\r\n            {\r\n                isUnfollowModalOpen ?\r\n                    <Modal\r\n                        closeEvent={closeUnfollowModal}\r\n                        styles=\"h-72 top-[26.5%]\"\r\n                    >\r\n                        <AreYouSureModal\r\n                            areYouSureEvent={areYouSureEvent}\r\n                            profileImage={profileImage}\r\n                            closeEvent={closeUnfollowModal}\r\n                            questionText={`Unfollow ${username}`}\r\n                            buttonText=\"Unfollow\"\r\n                        />\r\n                    </Modal> :\r\n                    null\r\n            }\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default UserSuggestion","import { db } from \"firebase-setup/firebaseConfig\";\r\nimport { collection, getDocs, query, where } from \"firebase/firestore\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useAppSelector } from \"redux-setup/hooks\";\r\nimport UserState from \"types/userStateType\";\r\n\r\ntype UseUserListType = (usersList: {userId: string}[]) => UserState[]\r\n    \r\nconst useUserList: UseUserListType = (usersList) => {\r\n    const userOnPage = useAppSelector(state => state.userOnPage.user);\r\n    const [allUsers, setAllUsers] = useState<UserState[]>([]);\r\n\r\n    useEffect(() => {\r\n        const getUsers = async () => {\r\n            if(!usersList.length){\r\n                return;\r\n            }\r\n\r\n            const usersRef = collection(db, \"users\");\r\n            const q = query(usersRef, where(\"userId\", \"in\", usersList.map(obj => obj.userId)));\r\n        \r\n            const querySnapshot = await getDocs(q);\r\n            setAllUsers(querySnapshot.docs.map(doc => doc.data()) as UserState[])\r\n        } \r\n\r\n        getUsers();\r\n    }, [userOnPage.userId])\r\n\r\n    return allUsers\r\n}\r\n\r\nexport default useUserList","import React, { useCallback } from 'react'\r\nimport Close from 'svgs/empty/Close';\r\nimport UserLoader from 'components/other/UserLoader';\r\nimport UserSuggestion from \"./UserSuggestion\";\r\nimport useUserList from 'pages/profile/hooks/useUserList';\r\n\r\ntype UsersListProps = {\r\n    usersList: {userId: string}[];\r\n    descriptionLine: string;\r\n    closeEvent: () => void\r\n}\r\n\r\nconst UsersListModal: React.FC<UsersListProps> = React.memo(({ usersList, descriptionLine, closeEvent }) => {\r\n    const allUsers = useUserList(usersList);\r\n    \r\n    const users = allUsers.map(data => <UserSuggestion {...data} key={data.userId} />)\r\n\r\n    const generateSkeletons = useCallback(() => {\r\n        const skeletons = [];\r\n        for (let i = 0; i < 3; i++) {\r\n            skeletons.push(\r\n                <UserLoader\r\n                    key={i}\r\n                    imageStyles={{ width: 40, height: 40, borderRadius: \"50%\" }}\r\n                    firstTextStyles={{ width: 150, height: 9, borderRadius: \"10px\" }}\r\n                    secondTextStyles={{ width: 130, height: 9, borderRadius: \"10px\" }}\r\n                />\r\n            );\r\n        }\r\n\r\n        return skeletons\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"h-10 w-full flex justify-center items-center font-medium border-b relative\">\r\n                <p>{descriptionLine}</p>\r\n                <button\r\n                    className=\"absolute right-2\"\r\n                    onClick={closeEvent}\r\n                >\r\n                    <Close\r\n                        styles=\"h-7 w-7\"\r\n                    />\r\n                </button>\r\n            </div>\r\n            {\r\n                allUsers.length ?\r\n                    <div className=\"overflow-hidden overflow-y-auto\">\r\n                        {users}\r\n                    </div> :\r\n                    generateSkeletons() \r\n            }\r\n        </>\r\n    )\r\n})\r\n\r\nexport default UsersListModal","import React from 'react'\r\n\r\nconst Close: React.FC<{ styles: string }> = ({ styles }) => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" className={styles} fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth={2}>\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Close"],"names":["AreYouSureModal","React","areYouSureEvent","profileImage","closeEvent","buttonText","questionText","additionalText","className","src","length","process","onClick","Modal","children","styles","useEffect","document","body","classList","add","remove","clickHandler","useCallback","event","stopPropagation","includes","initial","scale","animate","transition","duration","UserLoader","imageStyles","firstTextStyles","secondTextStyles","margin","color","style","usersList","descriptionLine","navigate","useNavigate","navigateBack","username","fullName","userId","loggedUser","useAppSelector","state","signedUser","user","dispatch","useAppDispatch","uid","useParams","useState","isUnfollowModalOpen","setIsUnfollowModalOpen","handleFollowingClick","handleFollowClick","addToFollowing","removeFromFollowing","navigateToProfile","RoutesTypes","closeUnfollowModal","following","some","data","userOnPage","allUsers","setAllUsers","getUsers","usersRef","collection","db","q","query","where","map","obj","getDocs","querySnapshot","docs","doc","useUserList","users","key","generateSkeletons","skeletons","i","push","width","height","borderRadius","Close","xmlns","fill","viewBox","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d"],"sourceRoot":""}