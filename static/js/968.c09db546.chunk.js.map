{"version":3,"file":"static/js/968.c09db546.chunk.js","mappings":"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","sources":["components/header/Header.tsx","components/header/components/ProfileDropMenuElement.tsx","svgs/empty/SwitchAccounts.tsx","components/header/components/ProfileDropMenuContainer.tsx","components/header/components/UserSearchElement.tsx","components/header/components/UsersSearchDropMenu.tsx","svgs/both/Home.tsx","svgs/empty/Search.tsx","components/header/components/SearchBar.tsx","svgs/both/NewPost.tsx","svgs/empty/Copy.tsx","components/header/components/new-post-modal/components/GalleryDropMenu.tsx","components/header/components/new-post-modal/components/NewPostModalOne.tsx","svgs/empty/ReturnBack.tsx","components/header/components/new-post-modal/components/NewPostModalTwo.tsx","components/header/components/new-post-modal/NewPostModal.tsx","svgs/empty/Profile.tsx","svgs/empty/Settings.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport RoutesTypes from \"constants/routes-types\"\r\nimport { useAppSelector } from \"redux-setup/hooks\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ProfileDropMenuContainer from \"./components/ProfileDropMenuContainer\";\r\nimport DropMenu from \"components/other/DropMenu\";\r\nimport UsersSearchDropMenu from \"./components/UsersSearchDropMenu\";\r\nimport Home from \"svgs/both/Home\";\r\nimport Direct from \"svgs/empty/Direct\";\r\nimport useWindowWidth from \"helpers/hooks/useWindowWidth\";\r\nimport SearchBar from \"./components/SearchBar\";\r\nimport NewPost from \"svgs/both/NewPost\";\r\nimport Modal from \"components/modal/Modal\";\r\nimport NewPostModal from \"./components/new-post-modal/NewPostModal\";\r\n\r\nenum MenuTypes{\r\n    NONE = \"\",\r\n    PROFILE = \"profile\",\r\n    SEARCH = \"search\",\r\n    NEW_POST = \"newPost\",\r\n}\r\n\r\nconst Header: React.FC = React.memo(() => {\r\n    const user = useAppSelector(state => state.signedUser.user);\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    const [currentMenu, setCurrentMenu] = useState<string>(MenuTypes.NONE);\r\n    const [wordEntering, setWordEntering] = useState<string>(\"\");\r\n\r\n    const innerWidth = useWindowWidth();\r\n    \r\n    useEffect(() => {\r\n        setCurrentMenu(MenuTypes.NONE);\r\n    }, [location])\r\n\r\n    const generateModal = () => {\r\n        switch (currentMenu) {\r\n            case MenuTypes.PROFILE: {\r\n                return (\r\n                    <DropMenu\r\n                        closeEvent={() => setCurrentMenu(MenuTypes.NONE)}\r\n                        styles=\"w-56 left-[-168px] top-11\"\r\n                    >\r\n                        <ProfileDropMenuContainer />\r\n                    </DropMenu>\r\n                )\r\n            }\r\n            case MenuTypes.NEW_POST: {\r\n                return (\r\n                    <Modal\r\n                        closeEvent={() => setCurrentMenu(MenuTypes.NONE)}\r\n                        styles=\"h-[500px] top-[14%] w-\"\r\n                    >\r\n                        <NewPostModal closeEvent={() => setCurrentMenu(MenuTypes.NONE)}/>\r\n                    </Modal>\r\n                )\r\n            }\r\n            default: {\r\n                return null;\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <header className=\"w-screen py-2 flex items-center justify-center border-b border-gray-200 bg-white\">\r\n            <div className=\"w-11/12 flex items-center justify-evenly\">\r\n                <Link to={RoutesTypes.DASHBOARD}>\r\n                    <img\r\n                        src=\"images/instagram-logo.webp\"\r\n                        className=\"h-10\"\r\n                    />\r\n                </Link>\r\n                {\r\n                    innerWidth > 640 ?\r\n                        <div\r\n                            className=\"w-64 h-9 relative\"\r\n                            onClick={() => setCurrentMenu(MenuTypes.SEARCH)}\r\n                        >\r\n                            <SearchBar\r\n                                wordEntering={wordEntering}\r\n                                setWordEntering={setWordEntering}\r\n                            />\r\n                            {\r\n                                currentMenu === MenuTypes.SEARCH ?\r\n                                    <DropMenu\r\n                                        closeEvent={event => {\r\n                                            event.stopPropagation();\r\n                                            setCurrentMenu(MenuTypes.NONE)\r\n                                        }}\r\n                                        styles=\"w-[375px] top-12 left-[-65px] h-96 z-20\"\r\n                                    >\r\n                                        <UsersSearchDropMenu\r\n                                            wordEntering={wordEntering}\r\n                                        />\r\n                                    </DropMenu> :\r\n                                    null\r\n                            }\r\n                        </div> :\r\n                        null\r\n                }\r\n                <div className=\"flex gap-4\">\r\n                    <button onClick={() => navigate(RoutesTypes.DASHBOARD)}>\r\n                        <Home />\r\n                    </button>\r\n                    <button\r\n                        className=\"pb-1 mr-[-3px]\"\r\n                        onClick={() => navigate(RoutesTypes.DIRECT)}\r\n                    >\r\n                        <Direct\r\n                            styles=\"h-6 w-6 text-gray-800 rotate-[55deg]\"\r\n                            includeHovering={false}\r\n                        />\r\n                    </button>\r\n                    <button\r\n                        onClick={() => setCurrentMenu(MenuTypes.NEW_POST)}\r\n                    >\r\n                        <NewPost\r\n                            isOpen={currentMenu === MenuTypes.NEW_POST}\r\n                        />\r\n                    </button>\r\n                    <div className=\"relative flex items-center\">\r\n                        <button\r\n                            className=\"h-7 w-7 cursor-pointer rounded-full\"\r\n                            onClick={() => setCurrentMenu(MenuTypes.PROFILE)}\r\n                        >\r\n                            <img\r\n                                src={user.profileImage.length ? user.profileImage : \"../images/default-avatar-image.jpg\"}\r\n                                className=\"rounded-full h-7 w-7 object-cover\"\r\n                            />\r\n                        </button>\r\n                        {generateModal()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    )\r\n})\r\n\r\nexport default Header;","import React from 'react';\r\n\r\ntype DropMenuElementProps = {\r\n    image?: JSX.Element|JSX.Element[],\r\n    text: string,\r\n    callback: () => void,\r\n}\r\n\r\nconst ProfileDropMenuElement: React.FC<DropMenuElementProps> = React.memo(({ image, text, callback }) => {\r\n    return (\r\n        <button\r\n            className=\"flex w-full h-9 items-center justify-center \"\r\n            onClick={callback}\r\n        >\r\n            <div className=\"flex w-5/6 gap-3\">\r\n                {\r\n                    image ?\r\n                        image :\r\n                        null\r\n                }\r\n                <p className=\"text-gray-700 text-sm\">{text}</p>\r\n            </div>\r\n        </button>\r\n    )\r\n})\r\n\r\nexport default ProfileDropMenuElement;","import React from 'react'\r\n\r\nconst SwitchAccounts: React.FC = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 text-gray-700\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth={2}>\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M8 7h12m0 0l-4-4m4 4l-4 4m0 6H4m0 0l4 4m-4-4l4-4\" />\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default SwitchAccounts","import React, { useCallback } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport ProfileRoutes from 'constants/profile-routes';\r\nimport RoutesTypes from 'constants/routes-types';\r\nimport { removeSignedUser } from 'redux-setup/features/signedUser';\r\nimport { useAppDispatch, useAppSelector } from 'redux-setup/hooks';\r\nimport ProfileDropMenuElement from './ProfileDropMenuElement';\r\nimport { signOut } from 'firebase/auth';\r\nimport { auth } from 'firebase-setup/firebaseConfig';\r\nimport Profile from 'svgs/empty/Profile';\r\nimport Saved from 'svgs/empty/Saved';\r\nimport Settings from 'svgs/empty/Settings';\r\nimport SwitchAccounts from 'svgs/empty/SwitchAccounts';\r\nimport AccountsRoutes from 'constants/accounts-routes';\r\n\r\nconst ProfileDropMenuContainer: React.FC = React.memo(() => {\r\n    const dispatch = useAppDispatch();\r\n    const user = useAppSelector(state => state.signedUser.user);\r\n    const navigate = useNavigate();\r\n\r\n    const handleLogout = useCallback(async () => {\r\n        await signOut(auth);\r\n        dispatch(removeSignedUser());\r\n        navigate(RoutesTypes.LOGIN);\r\n    }, [auth])\r\n\r\n    return (\r\n        <>\r\n            <ProfileDropMenuElement\r\n                image={<Profile styles=\"h-5 w-5 text-gray-700\" />}\r\n                text=\"Profile\"\r\n                callback={() => navigate(RoutesTypes.DASHBOARD + user.userId)}\r\n            />\r\n            <ProfileDropMenuElement\r\n                image={(\r\n                    <Saved\r\n                        styles=\"h-5 w-5 text-gray-700\"\r\n                        includeHovering={false}\r\n                    />\r\n                )}\r\n                text=\"Saved\"\r\n                callback={() => navigate(RoutesTypes.DASHBOARD + user.userId + \"/\" + ProfileRoutes.SAVED)}\r\n            />\r\n            <ProfileDropMenuElement\r\n                image={<Settings styles=\"h-5 w-5 text-gray-700\" />}\r\n                text=\"Settings\"\r\n                callback={() => navigate(RoutesTypes.ACOUNTS + \"/\" + AccountsRoutes.EDIT_PROFILE)}\r\n            />\r\n            <ProfileDropMenuElement\r\n                image={<SwitchAccounts />} \r\n                text=\"Switch Accounts\"\r\n                callback={() => console.log(\"clicked\")}\r\n            />\r\n            <div className=\"w-full border-t-2\"></div>\r\n            <ProfileDropMenuElement\r\n                text=\"Log Out\"\r\n                callback={handleLogout}\r\n            />\r\n            <div className=\"w-4 h-4 absolute bg-white rotate-45 top-[-8px] right-8 \"></div>\r\n        </>\r\n    )\r\n})\r\n\r\nexport default ProfileDropMenuContainer;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport RoutesTypes from 'constants/routes-types';\r\nimport UserSuggestionType from 'types/user-suggestion-type';\r\n\r\nconst UserSearchElement: React.FC<UserSuggestionType> = React.memo(({ profileImage, username, fullName, userId }) => {\r\n    return (\r\n        <Link \r\n            className=\"flex h-13 mb-1 px-2 items-center py-1\"\r\n            to={RoutesTypes.DASHBOARD + userId}\r\n        >\r\n            <div className=\"w-full h-full py-[0.5px] gap-2 flex items-center\">\r\n                <img\r\n                    src={profileImage.length ? profileImage : \"../images/default-avatar-image.jpg\"}\r\n                    className=\"h-12 w-12 rounded-full object-cover\"\r\n                />\r\n                <div className=\"flex flex-col justify-center\">\r\n                    <p className=\"font-medium text-sm tracking-wide whitespace-nowrap\">{username}</p>\r\n                    <p className=\"text-gray-400 text-sm whitespace-nowrap\">{fullName}</p>\r\n                </div>\r\n            </div>\r\n        </Link>\r\n    )\r\n})\r\n\r\nexport default UserSearchElement","import React, { useEffect, useMemo, useState } from 'react'\r\nimport UserSearchElement from './UserSearchElement'\r\nimport UserState from 'types/user-state-type';\r\nimport getUsers from 'helpers/other/get-users/getUsers';\r\nimport UserLoader from 'components/other/UserLoader';\r\n\r\nconst UsersSearchDropMenu: React.FC<{ wordEntering: string }> = React.memo(({ wordEntering }) => {\r\n    const [usersInfo, setUsersInfo] = useState<UserState[]>([])\r\n\r\n    useEffect(() => {\r\n        const handler = setTimeout(async () => {\r\n           await getUsers(wordEntering, setUsersInfo);\r\n        }, 300)\r\n\r\n        return () => clearTimeout(handler);\r\n    }, [wordEntering])\r\n\r\n    const generateSkeletons = () => {\r\n        const skeletons = [];\r\n        for (let i = 0; i < 3; i++) {\r\n            skeletons.push(\r\n                <UserLoader\r\n                    key={i}\r\n                    imageStyles={{ width: 40, height: 40, borderRadius: \"50%\" }}\r\n                    firstTextStyles={{ width: 160, height: 9, borderRadius: \"10px\" }}\r\n                    secondTextStyles={{ width: 140, height: 9, borderRadius: \"10px\" }}\r\n                />\r\n            );\r\n        }\r\n\r\n        return skeletons\r\n    }\r\n\r\n    const generateElements = useMemo(() => usersInfo.map(doc => <UserSearchElement\r\n        profileImage={doc.profileImage}\r\n        username={doc.username}\r\n        fullName={doc.fullName}\r\n        userId={doc.userId}\r\n        key={doc.userId}\r\n    />), [usersInfo])\r\n\r\n    return (\r\n        <div className=\"flex flex-col w-full mt-2 overflow-hidden overflow-y-auto\">\r\n            {\r\n                usersInfo.length ?\r\n                    generateElements :\r\n                    generateSkeletons()\r\n            }\r\n            <div className=\"w-4 h-4 absolute bg-white rotate-45 top-[-8px] right-[180px]\"></div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default UsersSearchDropMenu","import React from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\nimport RoutesTypes from 'constants/routes-types';\r\n\r\nconst Home: React.FC = () => {\r\n    const location = useLocation();\r\n\r\n    return (\r\n        location.pathname === RoutesTypes.DASHBOARD ?\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-7 w-7 text-gray-800\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                <path d=\"M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z\" />\r\n            </svg> :\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-7 w-7 text-gray-800\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth={2}>\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\" />\r\n            </svg>\r\n    )\r\n}\r\n\r\nexport default Home","import React from 'react'\r\n\r\nconst Search: React.FC = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 text-gray-400 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth={2}>\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Search","import React, { useRef } from 'react'\r\nimport Search from 'svgs/empty/Search';\r\n\r\ntype SearchBarProps = {\r\n    wordEntering: string, \r\n    setWordEntering: React.Dispatch<React.SetStateAction<string>> \r\n}\r\n\r\nconst SearchBar: React.FC<SearchBarProps> = React.memo(({ wordEntering, setWordEntering }) => {\r\n    const inputRef = useRef<any>();\r\n\r\n    return (\r\n        <button\r\n            className=\"bg-gray-200 rounded-lg flex px-4 items-center h-full w-full\"\r\n            onClick={() => console.log(\"div clicked\")}\r\n        >\r\n            {\r\n                document.activeElement !== inputRef.current ?\r\n                    <Search /> :\r\n                    null\r\n            }\r\n            <input\r\n                className=\"w-full h-full bg-gray-200 rounded-lg placeholder:font-light placeholder:text-gray-400 relative\"\r\n                type=\"text\"\r\n                placeholder=\"Search\"\r\n                ref={inputRef}\r\n                value={wordEntering}\r\n                onChange={(event) => setWordEntering(event.target.value)}\r\n                onClick={() => console.log(\"input cliked\")}\r\n            />\r\n        </button>\r\n    )\r\n})\r\n\r\nexport default SearchBar","import React from 'react'\r\n\r\nconst NewPost: React.FC<{ isOpen: boolean }> = ({ isOpen }) => {\r\n    return (\r\n        isOpen ?\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-7 w-7 text-gray-800\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm1-11a1 1 0 10-2 0v2H7a1 1 0 100 2h2v2a1 1 0 102 0v-2h2a1 1 0 100-2h-2V7z\" clipRule=\"evenodd\" />\r\n            </svg> :\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-7 w-7 text-gray-800\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth={2}>\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 9v3m0 0v3m0-3h3m-3 0H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n            </svg>\r\n    )\r\n}\r\n\r\nexport default NewPost","import React from 'react'\r\n\r\nconst Copy: React.FC = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 ml-[1.5px] mb-[1px]\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth={2}>\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M8 7v8a2 2 0 002 2h6M8 7V5a2 2 0 012-2h4.586a1 1 0 01.707.293l4.414 4.414a1 1 0 01.293.707V15a2 2 0 01-2 2h-2M8 7H6a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2v-2\" />\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Copy","import React, { useMemo } from 'react'\r\n\r\ntype GalleryDropMenuProps = {\r\n  images: any[], \r\n  setImage: React.Dispatch<React.SetStateAction<any[]>>,\r\n  currentImageIndex: number\r\n  setCurrentImageIndex: React.Dispatch<React.SetStateAction<number>>,\r\n}\r\n\r\nconst GalleryDropMenu: React.FC<GalleryDropMenuProps> = React.memo(({ images, setImage, currentImageIndex, setCurrentImageIndex}) => {\r\n  const imageElements = useMemo(() => images.map((image, index) => (\r\n    <div\r\n      className=\"relative z-10 w-full h-full aspect-square cursor-pointer rounded-sm\"\r\n      onClick={() => setCurrentImageIndex(index)}\r\n      key={image}\r\n    >\r\n      <img\r\n        src={URL.createObjectURL(image)}\r\n        className={`h-full w-full object-cover rounded-sm bg-red-800`}\r\n      />\r\n    </div>\r\n  )), [images])\r\n\r\n  return (\r\n    <div className=\"h-24 flex p-3\">\r\n      {imageElements}\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default GalleryDropMenu","import React, { useState } from 'react';\r\nimport { motion } from \"framer-motion\";\r\nimport useWindowWidth from 'helpers/hooks/useWindowWidth';\r\nimport Copy from 'svgs/empty/Copy';\r\nimport DropMenu from 'components/other/DropMenu';\r\nimport GalleryDropMenu from './GalleryDropMenu';\r\n\r\ntype NewPostModalOneProps = { \r\n    image: any[], \r\n    setImage: React.Dispatch<React.SetStateAction<any[]>>,\r\n    setCurrentPageId: React.Dispatch<React.SetStateAction<number>>,\r\n    currentImageIndex: number\r\n    setCurrentImageIndex: React.Dispatch<React.SetStateAction<number>>,\r\n}\r\n\r\nconst NewPostModalOne: React.FC<NewPostModalOneProps> = React.memo(({ image, setImage, setCurrentPageId, setCurrentImageIndex, currentImageIndex }) => {\r\n    const [drag, setDrag] = useState<boolean>(false);\r\n    const [errorFileName, setErrorFileName] = useState<null | string>(null);\r\n    const [areImagesOpened, setAreImagesOpen] = useState<boolean>(false);\r\n    const innerWidth = useWindowWidth();\r\n\r\n    const onDropHandler = (event: React.DragEvent<HTMLDivElement>) => {\r\n        event.preventDefault();\r\n\r\n        const file = event.dataTransfer.files[0]\r\n        if(file['type'].split('/')[0] !== 'image'){\r\n            setErrorFileName(file.name);\r\n            setDrag(false);\r\n            return;\r\n        }\r\n        \r\n        setImage(prevFiles => [...prevFiles, file])\r\n    }\r\n\r\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const { files } = event.target\r\n        if (files && files[0]) {\r\n            setImage(prevFiles => [...prevFiles, files[0]]);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <motion.div\r\n            className=\"flex flex-col h-full w-[300px] sm:w-[450px]\"\r\n            {...(\r\n                image.length && innerWidth > 640 ?\r\n                    {\r\n                        initial: { width: \"640px\" },\r\n                        animate: { width: \"450px\" },\r\n                        transition: { duration: 0.3 },\r\n                    } :\r\n                    {}\r\n            )}\r\n        >\r\n            <div className=\"h-10 w-full flex justify-center items-center font-medium border-b relative\">\r\n                <p>{errorFileName ? \"File couldn't be uploaded\" : \"Create new post\"}</p>\r\n                {\r\n                    image.length ?\r\n                        <button\r\n                            className=\"absolute right-3 font-bold text-blue-500\"\r\n                            onClick={() => setCurrentPageId(prevVal => prevVal + 1)}\r\n                        >\r\n                            <p>Next</p>\r\n                        </button> :\r\n                        null\r\n                }\r\n            </div>\r\n            {\r\n                image.length ?\r\n                    <div className=\"relative h-[calc(100%-40px)] w-full\">\r\n                        <img\r\n                            src={URL.createObjectURL(image[0])}\r\n                            className=\"h-full w-full object-cover rounded-b-xl\"\r\n                        />\r\n                        <button\r\n                            className={`\r\n                                absolute right-4 bottom-4 rounded-full w-8 h-8 flex items-center justify-center\r\n                                ${areImagesOpened ? \"bg-white text-zinc-700 shadow-xl\" : \"bg-zinc-700 text-white\"}\r\n                            `}\r\n                            onClick={() => setAreImagesOpen(prevVal => !prevVal)}\r\n                        >\r\n                            <Copy />\r\n                        </button>\r\n                        {\r\n                            areImagesOpened ?\r\n                                <DropMenu\r\n                                    closeEvent={() => setAreImagesOpen(false)}\r\n                                    styles=\"max-w-[calc(100%-31px)] right-4 bottom-16 bg-zinc-700\"\r\n                                    noAnimation={true}\r\n                                >\r\n                                    <GalleryDropMenu\r\n                                        images={image}\r\n                                        setImage={setImage}\r\n                                        currentImageIndex={currentImageIndex}\r\n                                        setCurrentImageIndex={setCurrentImageIndex}\r\n                                    />\r\n                                </DropMenu> :\r\n                                null\r\n                        }\r\n                    </div> :\r\n                    <div\r\n                        className={`w-full h-full flex flex-col justify-center items-center gap-2 rounded-b-xl ${(drag || errorFileName) && \"back\"}`}\r\n                        onDragStart={(event) => {\r\n                            event.preventDefault();\r\n                            setDrag(true);\r\n                        }}\r\n                        onDragLeave={(event) => {\r\n                            event.preventDefault();\r\n                            setDrag(false);\r\n                        }}\r\n                        onDragOver={(event) => {\r\n                            event.preventDefault();\r\n                            setDrag(true);\r\n                        }}\r\n                        onDrop={(event) => onDropHandler(event)}\r\n                    >\r\n                        <img\r\n                            src={errorFileName ? \"../images/error.jpg\" : drag ? \"../images/create-post-drag.jpg\" : \"../images/create-post.jpg\"}\r\n                            className={drag ? \"w-[106px]\" : \"w-[100px]\"}\r\n                        />\r\n                        <p className=\"text-xl sm:text-2xl font-thin\">\r\n                            {errorFileName ? \"This file is not supported\" : \"Drag photos and videos here\"}\r\n                        </p>\r\n                        {\r\n                            errorFileName ?\r\n                                <div className=\"flex w-5/6 text-center gap-1 justify-center\">\r\n                                    <p className=\"text-gray-400 text-sm font-bold\">{errorFileName}</p>\r\n                                    <p className=\"text-gray-400 text-sm\"> could not be uploaded.</p>\r\n                                </div> :\r\n                                null\r\n                        }\r\n                        <label\r\n                            className=\"mt-3 py-1 px-3 bg-blue-500 font-medium text-white rounded cursor-pointer text-sm tracking-wide flex items-center\"\r\n                        >\r\n                            <input\r\n                                type=\"file\"\r\n                                accept=\"image/png, image/jpg, image/jpeg\"\r\n                                className=\"hidden\"\r\n                                onChange={(event) => handleChange(event)}\r\n                            />\r\n                            <p>{errorFileName ? \"Select other files\" : \"Select from computer\"}</p>\r\n                        </label>\r\n                    </div>\r\n            }\r\n        </motion.div>\r\n    )\r\n})\r\n\r\nexport default NewPostModalOne","import React from 'react'\r\n\r\nconst ReturnBack: React.FC = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth={2}>\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M10 19l-7-7m0 0l7-7m-7 7h18\" />\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default ReturnBack","import React, { useState } from 'react';\r\nimport ReturnBack from 'svgs/empty/ReturnBack';\r\nimport { motion } from \"framer-motion\";\r\nimport useWindowWidth from \"helpers/hooks/useWindowWidth\";\r\nimport { getDownloadURL, ref, uploadBytes } from 'firebase/storage';\r\nimport { db, storage } from 'firebase-setup/firebaseConfig';\r\nimport { v4 } from 'uuid';\r\nimport { doc, updateDoc } from 'firebase/firestore';\r\nimport { useAppDispatch, useAppSelector } from 'redux-setup/hooks';\r\nimport { setSignedUser } from 'redux-setup/features/signedUser';\r\nimport { nanoid } from '@reduxjs/toolkit';\r\nimport { setUserOnPage } from 'redux-setup/features/userOnPage';\r\nimport { setIsBeingLoaded } from 'redux-setup/features/isBeingLoaded';\r\nimport Smile from 'svgs/empty/Smile';\r\nimport DropMenu from 'components/other/DropMenu';\r\nimport Picker, { IEmojiData } from 'emoji-picker-react'\r\n\r\ntype NewPostModalTwoProps = {\r\n    setCurrentPageId: React.Dispatch<React.SetStateAction<number>>,\r\n    image: any[],\r\n}\r\n\r\nconst NewPostModalTwo: React.FC<NewPostModalTwoProps> = React.memo(({ setCurrentPageId, image }) => {\r\n    const userOnPage = useAppSelector(state => state.userOnPage.user);\r\n    const user = useAppSelector(state => state.signedUser.user);\r\n    const dispatch = useAppDispatch();\r\n\r\n    const innerWidth = useWindowWidth();\r\n    const [text, setText] = useState<string>(\"\");\r\n\r\n    const [areEmojiOpen, setAreEmojiOpen] = useState<boolean>(false);\r\n\r\n    const createPost = async () => {\r\n        dispatch(setIsBeingLoaded(true));\r\n        const imageRef = ref(storage, `Images/${image[0].name + v4()}`)\r\n        await uploadBytes(imageRef, image[0])\r\n\r\n        const imageUrl = await getDownloadURL(imageRef);\r\n\r\n        const newPost = {\r\n            postId: nanoid(),\r\n            postImage: imageUrl,\r\n            likes: [],\r\n            comments: [],\r\n            text: text,\r\n            fromId: user.userId,\r\n            createdAt: (new Date()).getTime(),\r\n        }\r\n\r\n        await updateDoc(doc(db, \"users\", user.userId), {\r\n            posts: [...user.posts, newPost]\r\n        })\r\n\r\n        dispatch(setSignedUser({...user, posts: [...user.posts, newPost]}));\r\n\r\n        if(user.userId === userOnPage.userId){\r\n            dispatch(setUserOnPage({...user, posts: [...user.posts, newPost]}))\r\n        }\r\n\r\n        dispatch(setIsBeingLoaded(false));\r\n        setCurrentPageId(prevVal => prevVal + 1);\r\n    }\r\n\r\n    const handleEmojiClick = (event: React.MouseEvent<Element, MouseEvent>, emojiObject: IEmojiData) => {\r\n        setText(prevText => prevText + emojiObject.emoji);\r\n    }\r\n\r\n    return (\r\n        <motion.div\r\n            className=\"flex flex-col h-full w-[300px] sm:w-[640px]\"\r\n            {...(\r\n                innerWidth > 640 ?\r\n                    {\r\n                        initial: { width: \"450px\" },\r\n                        animate: { width: \"640px\" },\r\n                        exit: {width: \"450px\"},\r\n                        transition: { duration: 0.3 },\r\n                    } :\r\n                    {}\r\n            )}\r\n        >\r\n            <div className=\"h-10 w-full flex justify-center items-center font-medium border-b relative\">\r\n                <div className=\"w-full h-12 flex justify-between items-center px-4\">\r\n                    <button onClick={() => setCurrentPageId(prevVal => prevVal - 1)}>\r\n                        <ReturnBack />\r\n                    </button>\r\n                    <p>Create new post</p>\r\n                    <button\r\n                        className=\"font-bold text-blue-500\"\r\n                        onClick={createPost}\r\n                    >\r\n                        <p>Share</p>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div className=\"w-full h-full flex flex-col sm:flex-row\">\r\n                <div className=\"relative\">\r\n                    <img\r\n                        src={URL.createObjectURL(image[0])}\r\n                        className=\"h-[225px] sm:h-[460px] w-[450px] object-cover sm:rounded-bl-xl\"\r\n                    />\r\n                    {\r\n                        areEmojiOpen ?\r\n                                <DropMenu\r\n                                    closeEvent={event => {\r\n                                        event.stopPropagation();\r\n                                        setAreEmojiOpen(false)\r\n                                    }}\r\n                                    styles=\"w-[calc(100%-10px)] sm:w-[250px] bottom-[calc(100%-221px)] right-[5px] sm:right-[2px] sm:bottom-[225px] h-[217px] sm:h-[233px] z-20 \"\r\n                                    noAnimation={true}\r\n                                >\r\n                                    <Picker\r\n                                        pickerStyle={{ width: \"100%\", height: \"100%\" }}\r\n                                        onEmojiClick={handleEmojiClick}\r\n                                    />\r\n                                </DropMenu>:\r\n                            null\r\n                    }\r\n                </div>\r\n                <motion.div \r\n                    className=\"flex flex-col w-full h-[calc(100%-40px)] sm:border-l overflow-hidden\"\r\n                    {...(\r\n                        innerWidth > 640 ?\r\n                            {\r\n                                initial: { width: \"0px\" },\r\n                                animate: { width: \"190px\" },\r\n                                transition: { duration: 0.3 },\r\n                            } :\r\n                            {}\r\n                    )}\r\n                >\r\n                    <div\r\n                        className=\"w-full h-14 py-[0.5px] gap-2 flex items-center px-3\"\r\n                    >\r\n                        <img\r\n                            src={user.profileImage.length ? user.profileImage : \"../images/default-avatar-image.jpg\"}\r\n                            className=\"h-9 w-9 rounded-full object-cover\"\r\n                        />\r\n                        <p className=\"font-medium text-sm tracking-wide whitespace-nowrap\">{user.username}</p>\r\n                    </div>\r\n                    <textarea \r\n                        className=\"resize-none h-36 overflow-hidden overflow-y-auto px-3 focus:outline-none text-sm text-sm\"\r\n                        placeholder='Write a caption...'\r\n                        onChange={(event) => setText(event.target.value)}\r\n                        value={text}\r\n                    />\r\n                    <div className=\"w-full flex justify-between sm:border-b px-2 pb-2\">\r\n                        <button\r\n                            className=\"h-full flex items-center\"\r\n                            onClick={() => setAreEmojiOpen(prevVal => !prevVal)}\r\n                        >\r\n                            <Smile styles=\"w-6 h-6 text-gray-400\"/>\r\n                        </button>\r\n                        <p className=\"text-gray-400 text-sm\">{text.length}\\200</p>\r\n                    </div>\r\n                </motion.div>\r\n            </div>\r\n        </motion.div>\r\n    )\r\n})\r\n\r\nexport default NewPostModalTwo\r\n{/* {\r\n    isCloseModalOpen ?\r\n        <Modal\r\n            closeEvent={() => setIsCloseModalOpen(false)}\r\n            styles=\"h-32 top-[26.5%]\"\r\n        >\r\n            <AreYouSureModal\r\n                areYouSureEvent={() => null}\r\n                closeEvent={() => setIsCloseModalOpen(false)}\r\n                questionText=\"Discard post\"\r\n                profileImage='adsd'\r\n                additionalText=\"If you leave, your edits won't be saved.\"\r\n                buttonText=\"Discard\"\r\n            />\r\n        </Modal> :\r\n        null\r\n} */}","import React, { useEffect, useState } from 'react'\r\nimport NewPostModalOne from 'components/header/components/new-post-modal/components/NewPostModalOne';\r\nimport NewPostModalTwo from 'components/header/components/new-post-modal/components/NewPostModalTwo';\r\n\r\ntype NewPostModalProps = {\r\n    closeEvent: () => void\r\n}\r\n\r\nconst NewPostModal: React.FC<NewPostModalProps> = React.memo(({ closeEvent }) => {\r\n    const [currentPageId, setCurrentPageId] = useState<number>(0);\r\n    const [image, setImage] = useState<any[]>([]);\r\n    const [currentImageIndex, setCurrentImageIndex] = useState<number>(0);\r\n   // const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\r\n\r\n    useEffect(() => {\r\n        if(currentPageId === 2){\r\n            closeEvent();\r\n        }\r\n    }, [currentPageId])\r\n\r\n    return (\r\n        <>\r\n            {\r\n                (() => {\r\n                    switch (currentPageId) {\r\n                        case 0: {\r\n                            return (\r\n                                <NewPostModalOne\r\n                                    image={image}\r\n                                    currentImageIndex={currentImageIndex}\r\n                                    setCurrentImageIndex={setCurrentImageIndex}\r\n                                    setImage={setImage}\r\n                                    setCurrentPageId={setCurrentPageId}\r\n                                />\r\n                            )\r\n                        }\r\n                        case 1: {\r\n                            return (\r\n                                <NewPostModalTwo \r\n                                    setCurrentPageId={setCurrentPageId}\r\n                                    image={image}\r\n                                />\r\n                            )\r\n                        }\r\n                        default: {\r\n                            return null\r\n                        }\r\n                    }\r\n                })()\r\n            }\r\n            {/* {\r\n                isModalOpen ?\r\n                    <Modal\r\n                        closeEvent={() => setIsModalOpen(false)}\r\n                        styles=\"h-72 top-[26.5%]\"\r\n                    >\r\n                        <AreYouSureModal\r\n                            areYouSureEvent={() => {\r\n                                setIsModalOpen(false)\r\n                            }}\r\n                            profileImage={\"\"}\r\n                            closeEvent={() => setIsModalOpen(false)}\r\n                            questionText={`Unfollow ${\"111\"}`}\r\n                            buttonText=\"Unfollow\"\r\n                        />\r\n                    </Modal> :\r\n                    null\r\n            } */}\r\n        </>\r\n    )\r\n})\r\n\r\nexport default NewPostModal\r\n","import React from 'react'\r\n\r\nconst Profile: React.FC<{ styles: string }> = ({ styles }) => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" className={styles} fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth={2}>\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M5.121 17.804A13.937 13.937 0 0112 16c2.5 0 4.847.655 6.879 1.804M15 10a3 3 0 11-6 0 3 3 0 016 0zm6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Profile","import React from 'react'\r\n\r\nconst Settings: React.FC<{ styles: string }> = ({ styles }) => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" className={styles} fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth={2}>\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\" />\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Settings"],"names":["MenuTypes","React","image","text","callback","className","onClick","xmlns","fill","viewBox","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","dispatch","useAppDispatch","user","useAppSelector","state","signedUser","navigate","useNavigate","handleLogout","useCallback","signOut","auth","removeSignedUser","RoutesTypes","Profile","styles","userId","Saved","includeHovering","ProfileRoutes","Settings","AccountsRoutes","console","log","profileImage","username","fullName","to","src","length","wordEntering","useState","usersInfo","setUsersInfo","useEffect","handler","setTimeout","getUsers","clearTimeout","generateElements","useMemo","map","doc","skeletons","i","push","UserLoader","imageStyles","width","height","borderRadius","firstTextStyles","secondTextStyles","generateSkeletons","useLocation","pathname","setWordEntering","inputRef","useRef","document","activeElement","current","type","placeholder","ref","value","onChange","event","target","isOpen","fillRule","clipRule","images","setCurrentImageIndex","setImage","currentImageIndex","imageElements","index","URL","createObjectURL","setCurrentPageId","drag","setDrag","errorFileName","setErrorFileName","areImagesOpened","setAreImagesOpen","innerWidth","useWindowWidth","motion","initial","animate","transition","duration","prevVal","DropMenu","closeEvent","noAnimation","onDragStart","preventDefault","onDragLeave","onDragOver","onDrop","file","dataTransfer","files","split","name","prevFiles","onDropHandler","accept","handleChange","NewPostModalTwo","userOnPage","setText","areEmojiOpen","setAreEmojiOpen","createPost","setIsBeingLoaded","imageRef","storage","v4","uploadBytes","getDownloadURL","imageUrl","newPost","postId","nanoid","postImage","likes","comments","fromId","createdAt","Date","getTime","updateDoc","db","posts","setSignedUser","setUserOnPage","exit","stopPropagation","pickerStyle","onEmojiClick","emojiObject","prevText","emoji","Smile","currentPageId","location","NONE","currentMenu","setCurrentMenu","SEARCH","Direct","NEW_POST","PROFILE","Modal","generateModal"],"sourceRoot":""}