{"version":3,"file":"static/js/702.d4d6b64d.chunk.js","mappings":"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","sources":["pages/loading/Loading.tsx","pages/people/PersonSuggestion.tsx","pages/people/People.tsx"],"sourcesContent":["import React from 'react'\r\n\r\nconst Loading: React.FC = React.memo(() => {\r\n  return (\r\n        <div className=\"w-[100vw] h-[100vh] py-8 flex flex-col items-center justify-between\">\r\n            <div className=\"h-12\"></div>\r\n            <div>\r\n                <img \r\n                    src=\"../images/loading-logo.jpg\"\r\n                    className=\"h-28\"\r\n                />\r\n            </div>\r\n            <div>\r\n                <img\r\n                    src=\"../images/from-meta.jpg\"\r\n                    className=\"h-16\"\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Loading","import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport RoutesTypes from 'constants/routes-types';\r\nimport useFollowers from 'helpers/hooks/useFollowers';\r\nimport { useAppSelector } from 'redux-setup/hooks';\r\nimport UserSuggestionType from 'types/user-suggestion-type';\r\nimport Modal from 'components/modal/Modal';\r\nimport AreYouSureModal from 'components/modal/AreYouSureModal';\r\n\r\nconst PersonSuggestion: React.FC<UserSuggestionType> = React.memo(({ profileImage, username, fullName, userId }) => {\r\n    const loggedUser = useAppSelector(state => state.signedUser.user);\r\n    const navigate = useNavigate();\r\n\r\n    const [isUnfollowModalOpen, setIsUnfollowModalOpen] = useState<boolean>(false);\r\n    const { addToFollowing, removeFromFollowing } = useFollowers({ userId })\r\n\r\n    return (\r\n        <div className=\"flex w-full h-13 mb-1 px-2 justify-between items-center my-[4px]\">\r\n            <button \r\n                className=\"w-full h-full py-[0.5px] gap-2 flex items-center\"\r\n                onClick={() => navigate(RoutesTypes.DASHBOARD + userId)}\r\n            >\r\n                <img\r\n                    src={profileImage.length ? profileImage : \"../images/default-avatar-image.jpg\"}\r\n                    className=\"h-12 w-12 rounded-full object-cover\"\r\n                />\r\n                <div className=\"flex flex-col items-start\">\r\n                    <p className=\"font-medium text-sm tracking-wide whitespace-nowrap\">{username}</p>\r\n                    <p className=\"text-gray-400 text-sm whitespace-nowrap\">{fullName}</p>\r\n                    <p className=\"text-gray-400 text-xs\">Popular</p>\r\n                </div>\r\n            </button>\r\n            {\r\n                userId === loggedUser.userId || !loggedUser.userId.length ?\r\n                    null :\r\n                    loggedUser.following.some(data => data.userId === userId) ?\r\n                        <button\r\n                            className=\"h-7 w-28 rounded border text-sm font-medium cursor-pointer\"\r\n                            onClick={(event) => {\r\n                                event.stopPropagation();\r\n                                setIsUnfollowModalOpen(true);\r\n                            }}\r\n                        >\r\n                            Following\r\n                        </button> :\r\n                        <button\r\n                            className=\"h-7 w-20 bg-blue-500 font-medium text-white rounded cursor-pointer text-sm tracking-wide\"\r\n                            onClick={(event) => {\r\n                                event.stopPropagation();\r\n                                addToFollowing();\r\n                            }}\r\n                        >\r\n                            Follow\r\n                        </button>\r\n            }\r\n            {\r\n                isUnfollowModalOpen ?\r\n                    <Modal\r\n                        closeEvent={() => setIsUnfollowModalOpen(false)}\r\n                        styles=\"h-72 top-[26.5%]\"\r\n                    >\r\n                        <AreYouSureModal\r\n                            areYouSureEvent={() => {\r\n                                setIsUnfollowModalOpen(false)\r\n                                removeFromFollowing()\r\n                            }}\r\n                            profileImage={profileImage}\r\n                            closeEvent={() => setIsUnfollowModalOpen(false)}\r\n                            questionText={`Unfollow ${username}`}\r\n                            buttonText=\"Unfollow\"\r\n                        />\r\n                    </Modal> :\r\n                    null\r\n            }\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default PersonSuggestion","import Header from 'components/header/Header'\r\nimport { db } from 'firebase-setup/firebaseConfig'\r\nimport { collection, getDocs, query, where } from 'firebase/firestore'\r\nimport Loading from 'pages/loading/Loading'\r\nimport React, { useEffect, useMemo, useState } from 'react'\r\nimport { useAppSelector } from 'redux-setup/hooks'\r\nimport UserState from 'types/user-state-type'\r\nimport PersonSuggestion from './PersonSuggestion'\r\n\r\nconst SUGGESTIONS_AMOUNT = 30;\r\n\r\nconst People: React.FC = React.memo(() => {\r\n  const loggedUser = useAppSelector(state => state.signedUser.user);\r\n  const [suggestions, setSuggestions] = useState<UserState[]>([]);\r\n\r\n  useEffect(() => {\r\n    const getSuggestions = async () => {\r\n      const usersRef = collection(db, \"users\");\r\n      const q = query(usersRef, where(\"username\", \">=\", \"\"));\r\n      const querySnapshot = (await getDocs(q)).docs.map(doc => doc.data());\r\n\r\n      const users = querySnapshot\r\n        .filter(user =>\r\n          user.userId !== loggedUser.userId &&\r\n          loggedUser.following.every(fol => fol.userId !== user.userId)\r\n        )\r\n        .sort((a, b) => 0.5 - Math.random())\r\n        .slice(0, SUGGESTIONS_AMOUNT) as UserState[];\r\n\r\n      setSuggestions(users);\r\n    }\r\n\r\n    getSuggestions();\r\n  }, [])\r\n\r\n  const users = useMemo(() => suggestions.map(data => (\r\n    <PersonSuggestion\r\n      {...data}\r\n      key={data.userId}\r\n    />\r\n  )), [suggestions])\r\n\r\n  return (\r\n    users.length === 0 ?\r\n      <Loading /> :\r\n      <>\r\n        <div className=\"back flex flex-col items-center\">\r\n          <Header />\r\n          <div className={`min-h-[calc(100vh-60px)] w-full max-w-[550px] bg-blue-700 flex flex-col items-center back sm:pt-16 pb-16`}>\r\n            <div className=\"w-full flex justify-start font-medium h-8 flex items-center bg-white sm:bg-inherit px-4\">\r\n              Suggested\r\n            </div>\r\n            <div className=\"w-full flex flex-col bg-white py-2 px-1\">\r\n              {users}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"flex w-full fixed bottom-3 justify-center back text-xs text-gray-300 font-medium back\">\r\n          Â© 2022 INSTAGRAM FROM META\r\n        </div>\r\n      </>\r\n  )\r\n})\r\n\r\nexport default People"],"names":["Loading","React","className","src","profileImage","username","fullName","userId","loggedUser","useAppSelector","state","signedUser","user","navigate","useNavigate","useState","isUnfollowModalOpen","setIsUnfollowModalOpen","useFollowers","addToFollowing","removeFromFollowing","onClick","RoutesTypes","length","following","some","data","event","stopPropagation","Modal","closeEvent","styles","AreYouSureModal","areYouSureEvent","questionText","buttonText","People","suggestions","setSuggestions","useEffect","getSuggestions","usersRef","collection","db","q","query","where","getDocs","querySnapshot","docs","map","doc","users","filter","every","fol","sort","a","b","Math","random","slice","useMemo","key","Header"],"sourceRoot":""}